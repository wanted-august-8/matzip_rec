<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(%-60.60logger{59}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <appender name="SERVICE_LOG_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 1. Output SQL to console-->
    <logger name="org.hibernate.SQL" additivity="false" level="DEBUG" >
        <appender-ref ref="SERVICE_LOG_APPENDER"/>
    </logger>

    <!-- 2. Output SQL parameters-->
    <logger name="org.hibernate.orm.jdbc.bind" additivity="false" level="TRACE" >
        <appender-ref ref="SERVICE_LOG_APPENDER"/>
    </logger>

    <!-- 3. Spring Security 경로 체크 로깅 -->
    <logger name="org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager" additivity="false" level="TRACE" >
        <appender-ref ref="SERVICE_LOG_APPENDER"/>
    </logger>

    <!-- 4. Spring Security 에러 로깅 -->
    <logger name="org.springframework.security.web.access.ExceptionTranslationFilter" additivity="false" level="TRACE" >
        <appender-ref ref="SERVICE_LOG_APPENDER"/>
    </logger>

    <root>
        <level value="INFO"/>
        <appender-ref ref="SERVICE_LOG_APPENDER"/>
    </root>
</configuration>
